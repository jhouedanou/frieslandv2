version: '3.8'

services:
  # Dashboard Filament
  dashboard:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: friesland-dashboard
    ports:
      - "8081:80"
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - APP_URL=http://localhost:8081
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres-local
      - DB_PORT=5432
      - DB_DATABASE=friesland_db
      - DB_USERNAME=friesland_user
      - DB_PASSWORD=friesland_password
      - REDIS_HOST=redis-cache
      - REDIS_PORT=6379
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
    volumes:
      - ./storage:/var/www/storage
      - ./bootstrap/cache:/var/www/bootstrap/cache
    depends_on:
      - postgres-local
      - redis-cache
    networks:
      - friesland-network

  # Service PostgreSQL (réutilise celui existant)
  postgres-local:
    image: postgis/postgis:15-3.3
    container_name: friesland-postgres
    environment:
      - POSTGRES_DB=friesland_db
      - POSTGRES_USER=friesland_user
      - POSTGRES_PASSWORD=friesland_password
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../sql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - friesland-network

  # Service Redis (réutilise celui existant)
  redis-cache:
    image: redis:7-alpine
    container_name: friesland-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - friesland-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  friesland-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 